@model List<Foodi.Areas.Admin.Models.Cart>;

    <style>


    .otp-field {
        flex-direction: row;
        column-gap: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .otp-field input {
            height: 45px;
            width: 42px;
            border-radius: 6px;
            outline: none;
            font-size: 1.125rem;
            text-align: center;
            border: 1px solid #ddd;
        }

            .otp-field input:focus {
                box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
            }

            .otp-field input::-webkit-inner-spin-button,
            .otp-field input::-webkit-outer-spin-button {
                display: none;
            }

    .resend {
        font-size: 12px;
    }

    .footer {
        position: absolute;
        bottom: 10px;
        right: 10px;
        color: black;
        font-size: 12px;
        text-align: right;
        font-family: monospace;
    }

        .footer a {
            color: black;
            text-decoration: none;
        }

</style>

<section class="book_section layout_padding">
    <div class="container">
        <div class="heading_container">
            <h2>
                Your Shopping Cart
            </h2>
        </div>
        <div class="container">
            <div class="card-block table-border-style">
                <div class="table-responsive">
                    <table class="table data-table-export table-hover " id="cartTable">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Image</th>
                                <th>Unit Price</th>
                                <th>Quantity</th>
                                <th>Total Price</th>
                                <th></th>
                            </tr>
                        </thead>
                        @{
                            decimal grandTotal = 0;
                        }

                        <tbody>
                            @foreach (var cartItem in Model)
                            {
                                decimal totalPrice = @cartItem.Quantity * @cartItem.Price;
                                grandTotal += totalPrice;

                                <tr id="#row_@cartItem.CartId">
                                    <td>@cartItem.ProductName</td>
                                    <td></td>
                                    <td class="price">@cartItem.Price</td>
                                    <td class="quantity">
                                        <button class="btn btn-sm btn-primary incrementQuantity" data-cart-id="@cartItem.CartId">+</button>
                                        <span class="quantity-value">@cartItem.Quantity</span>
                                        <button class="btn btn-sm btn-danger decrementQuantity" data-cart-id="@cartItem.CartId">-</button>
                                    </td>
                                    <td class="totalPrice">@totalPrice</td>
                                    <td>
                                        <button class="btn btn-danger deleteCartItem" data-cart-id="@cartItem.CartId" id="deleteCartItem">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="white" class="bi bi-x" viewBox="0 0 16 16">
                                                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
                                            </svg>
                                        </button>
                                    </td>
                                </tr>
                            }

                            <tr>
                                <td colspan="3"></td>
                                <td class="pe-lg-5">
                                    <b>Grand Total:-</b>
                                </td>
                                <td id="grandTotal">@grandTotal</td>
                            </tr>

                        </tbody>
                    </table>


                </div>
                <div class="row">
                    <div class="col-md-3">
                        <a asp-area="Dashboard" asp-controller="Dashboard" asp-action="Menu">
                            <button class="btn btn-info"><i class="bi bi-arrow-left-circle-fill mr-2"></i>Continue Order</button>
                        </a>
                    </div>
                    <div class="col-md-3">
                        <a asp-area="Dashboard" asp-controller="Payment" asp-action="Payment">
                            <button class="btn btn-success"><i class="bi bi-arrow-right-circle-fill mr-2"></i>CheckOut</button>
                        </a>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>




<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.css" />

<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.js"></script>
<!-- DataTables JavaScript from CDN -->
<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>



<script type="text/javascript">
    jQuery(document).ready(function () {
        $('#cartTable').DataTable(
            {
                "ajax": {
                    "url": "/Dashboard/Cart/Cart",
                    "type": "Get",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "" }
                ]
            }
        );
    });
    $(document).ready(function () {
        $(document).on('click', '.incrementQuantity', function () {
            var quantitySpan = $(this).siblings('.quantity-value');
            var quantity = parseInt(quantitySpan.text());

            quantity += 1;


            var cartId = $(this).data('cart-id');

            var row = $(this).closest('tr');

            $.ajax({
                url: '/Dashboard/Cart/EditCart',
                method: 'POST',
                data: { cartId: cartId, updatedQuantity: quantity },
                success: function (response) {
                    if (response.success) {
                        quantitySpan.text(response.updatedQuantity);
                        updateRowTotal.call(row, quantity);
                        updateGrandTotal();
                    }
                },
                error: function (error) {
                    console.error(error);
                }
            });

        });

        $(document).on('click', '.decrementQuantity', function () {
            var quantitySpan = $(this).siblings('.quantity-value');
            var quantity = parseInt(quantitySpan.text());

            if (quantity > 0) {
                quantity -= 1;


                var cartId = $(this).data('cart-id');

                var row = $(this).closest('tr');

                $.ajax({
                    url: '/Dashboard/Cart/EditCart',
                    method: 'POST',
                    data: { cartId: cartId, updatedQuantity: quantity },
                    success: function (response) {
                        
                        quantitySpan.text(quantity);
                        updateRowTotal.call(row, quantity);
                        updateGrandTotal();
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });




            }
        });

        function updateRowTotal(quantity) {
            var price = parseFloat($(this).closest('tr').find('.price').text());
            var Total = price * quantity;
            $(this).closest('tr').find('.totalPrice').text(Total.toFixed(0));
        }

        $('.deleteCartItem').on('click', function () {
            var cartId = $(this).data('cart-id');
            var row = $(this).closest('tr');


            function calculateGrandTotal() {
                var grandTotal = 0;
                $('.price').each(function () {
                    var price = parseFloat($(this).text());
                    var quantity = parseInt($(this).closest('tr').find('.quantity').text());
                    grandTotal += price * quantity;
                });
                return grandTotal;
            }
            // Ajax request to delete the cart item1
            $.ajax({
                url: '/Dashboard/Cart/DeleteCart',
                method: 'POST',
                data: { cartId: cartId },
                success: function (response) {

                    row.remove();

                    updateGrandTotal();


                },
                error: function (error) {
                    console.error(error);
                }
            });
        });
        function updateGrandTotal() {
            var grandTotal = calculateGrandTotal();

            $('#grandTotal').text(grandTotal.toFixed(0)); // Adjust to display with two decimal places
        }

        function calculateGrandTotal() {
            var grandTotal = 0;
            $('.price').each(function () {
                var price = parseFloat($(this).text());
                var quantity = parseInt($(this).closest('tr').find('.totalPrice').text());
                grandTotal += quantity;
            });
            return grandTotal;
        }

    });

    
   
</script>